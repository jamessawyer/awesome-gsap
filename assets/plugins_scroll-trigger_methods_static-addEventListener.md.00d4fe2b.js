import{_ as e,c as o,o as s,a as l}from"./app.586394ea.js";const h=JSON.parse('{"title":"ScrollTrigger.addEventListener","description":"","frontmatter":{"title":"ScrollTrigger.addEventListener"},"headers":[],"relativePath":"plugins/scroll-trigger/methods/static-addEventListener.md","lastUpdated":1676275730000}'),r={name:"plugins/scroll-trigger/methods/static-addEventListener.md"},t=l(`<p>📚 定义：</p><p><code>ScrollTrigger.addEventListener(type: String, callback: Function): null</code></p><ul><li>对 <code>&quot;scrollStart&quot; | &quot;scrollEnd&quot; | &quot;refreshInit&quot; | &quot;revert&quot; | &quot;matchMedia&quot; | &quot;refresh&quot;</code> 全局事件进行监听，不绑定特定的ScrollTrigger实例</li><li>参数 <ul><li><code>type: String</code> : 事件类型，<code>&quot;scrollStart&quot; | &quot;scrollEnd&quot; | &quot;refreshInit&quot; | &quot;revert&quot; | &quot;matchMedia&quot; | &quot;refresh&quot;</code></li><li><code>callback: Function</code>：事件回调函数</li></ul></li></ul><p>详细：</p><ul><li><code>&quot;matchMedia&quot;</code> - 当达到 ScrollTrigger.matchMedia() 断点，并完成执行时触发</li><li><code>&quot;refreshInit&quot;</code> - 当resize发生后，ScrollTrigger重新计算start &amp; end值之前触发。或者你直接调用 <a href="./static-refresh.html">ScrollTrigger.refresh()</a>方法时，也会触发这个事件</li><li><code>&quot;refresh&quot;</code> - 当refresh发生时，ScrollTrigger完成所有start &amp; end值计算后，触发此事件（通常是resize后或直接调用crollTrigger.refresh()方法时）</li><li><code>&quot;revert&quot;</code> - 当ScrollTrigger回退到原始状态，或在它移除所有pingning spacers等触发。一般在 <code>refreshInit</code> 和 <code>refresh</code> 事件之间</li><li><code>&quot;scrollStart&quot;</code> - 当ScrollTrigger相关的scroller开始滚动时触发</li><li><code>&quot;scrollEnd&quot;</code> - 当ScrollTrigger相关的scroller停止滚动（当自从上次滚动东事件发生后200ms后，并且用户鼠标没有按压在滚动条/文档上）</li></ul><p>这些事件都是 <code>全局</code> 发送的，而不是绑定某个特定ScrollTrigger的 🌰</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ScrollTrigger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scrollEnd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Scrolling Ended!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>文档地址：</p><ul><li><a href="https://greensock.com/docs/v3/Plugins/ScrollTrigger/static.addEventListener()" target="_blank" rel="noreferrer">ScrollTrigger.addEventListener</a></li></ul><p>2022年10月20日14:24:45</p>`,10),a=[t];function n(c,i,p,d,u,g){return s(),o("div",null,a)}const D=e(r,[["render",n]]);export{h as __pageData,D as default};
