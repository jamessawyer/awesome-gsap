import{_ as e,c as s,o as l,a as r}from"./app.586394ea.js";const f=JSON.parse('{"title":"ScrollTrigger.refresh","description":"","frontmatter":{"title":"ScrollTrigger.refresh"},"headers":[{"level":2,"title":"刷新时会发生什么？","slug":"刷新时会发生什么","link":"#刷新时会发生什么","children":[]},{"level":2,"title":"高级：监听 refresh|refreshInit 事件","slug":"高级-监听-refresh-refreshinit-事件","link":"#高级-监听-refresh-refreshinit-事件","children":[]},{"level":2,"title":"refresh() 和 update() 的区别是什么？","slug":"refresh-和-update-的区别是什么","link":"#refresh-和-update-的区别是什么","children":[]}],"relativePath":"plugins/scroll-trigger/methods/static-refresh.md","lastUpdated":1676275730000}'),a={name:"plugins/scroll-trigger/methods/static-refresh.md"},n=r(`<nav class="table-of-contents"><ul><li><a href="#刷新时会发生什么">刷新时会发生什么？</a></li><li><a href="#高级-监听-refresh-refreshinit-事件">高级：监听 refresh|refreshInit 事件</a></li><li><a href="#refresh-和-update-的区别是什么">refresh() 和 update() 的区别是什么？</a></li></ul></nav><p>📚 定义：</p><p><code>ScrollTrigger.addEventListener(safe: Boolean)</code></p><ul><li>对页面中所有的ScrollTrigger都重新计算位置。当window/scroller resize时，它会自动发生。但是你也可以通过调用 <code>ScrollTrigger.refresh()</code> 强制刷新。例如，如果你对DOM进行更改，将导致回流和位置更改(如展开内容)。</li><li>参数 <ul><li><code>safe: Boolean</code> : 如果为 <code>true</code>，它至少等待一个requestAnimationFrame tick，大约200ms后开始刷新。这很有用，因为有时浏览器实际上不会立即呈现dom相关的更改，从而导致测量不准确。</li><li>例如，如果你给一个可以展开其内容的元素添加 <code>click</code> 事件，并且你在事件回调中调用 <code>ScrollTrigger.refresh()</code>，这个改变可能在那个时间点还没有完全渲染，因此这里是很适合开启 <code>safe</code> 😎</li></ul></li></ul><h2 id="刷新时会发生什么" tabindex="-1">刷新时会发生什么？ <a class="header-anchor" href="#刷新时会发生什么" aria-hidden="true">#</a></h2><p>每个ScrollTrigger都会进行如下步骤（按实例创建的顺序）：</p><ol><li><code>refreshInit</code> 事件被触发</li><li>任何固定元素（<code>pinned elements</code>）会临时回退到它们非固定状态（它们在文档中的自然位置）</li><li>如果使用了 <code>scrub</code>，动画会临时重置到开始状态</li><li>ScrollTrigger的start &amp; end位置会基于其当前DOM(自然流)进行重新计算。这也意味着，如果你使用了基于函数的 <code>start</code> | <code>end</code> 值，它们也会被调用🤩</li><li>任何固定元素和动画会依据它们的新的位置或进度重启（re-enable）</li><li>如果进度（progress）发生变化，<code>update()</code>回调函数会被调用</li><li>ScrollTrigger实例的 <code>onRefresh</code> 回调被触发</li></ol><h2 id="高级-监听-refresh-refreshinit-事件" tabindex="-1">高级：监听 refresh|refreshInit 事件 <a class="header-anchor" href="#高级-监听-refresh-refreshinit-事件" aria-hidden="true">#</a></h2><p>ScrollTrigger会在所有ScrollTriggers刷新前立即执行 <code>refreshInit</code> 事件，在所有ScrollTriggers刷新后立即执行 <code>refresh</code> 事件。 你可以添加一个 <a href="./static-addEventListener.html">事件监听器</a>：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ScrollTrigger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">refreshInit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 这个事件在刷新前调用</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">ScrollTrigger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">refresh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 这个事件在所有ScrollTriggers刷新后调用</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这些事件都是 <code>全局</code> 发送的，而不是绑定某个特定ScrollTrigger的 🌰</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">ScrollTrigger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scrollEnd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Scrolling Ended!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>同时还有一个<a href="./static-removeEventListener.html">移除事件监听</a>的方法。注意，这些方法都是 <code>静态的</code></p><h2 id="refresh-和-update-的区别是什么" tabindex="-1">refresh() 和 update() 的区别是什么？ <a class="header-anchor" href="#refresh-和-update-的区别是什么" aria-hidden="true">#</a></h2><p><code>refresh()</code> 是关于ScrollTrigger <code>start | end</code> 位置依据当前DOM重新计算；而 <code>update()</code> 简单的检查scroller滚动位置并更新相关联的动画和触发回调（如果必要的话）。 因此，<code>refresh()</code> 设计更多的工作，它也会最终调用 <code>update()</code>。 当DOM改变或者你需要强制重新计算 <code>start|end</code> 位置时，你才会去调用 <code>refresh()</code>。</p><p>文档地址：</p><ul><li><a href="https://greensock.com/docs/v3/Plugins/ScrollTrigger/static.refresh()" target="_blank" rel="noreferrer">ScrollTrigger.refresh()</a></li></ul><p>2022年10月20日17:40:12</p>`,18),o=[n];function c(t,p,i,d,h,D){return l(),s("div",null,o)}const y=e(a,[["render",c]]);export{f as __pageData,y as default};
