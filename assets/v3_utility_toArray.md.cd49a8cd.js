import{_ as s,c as l,o as a,a as n}from"./app.586394ea.js";const C=JSON.parse('{"title":"gsap.utils.toArray()","description":"","frontmatter":{"title":"gsap.utils.toArray()"},"headers":[],"relativePath":"v3/utility/toArray.md","lastUpdated":1676275730000}'),t={name:"v3/utility/toArray.md"},o=n(`<p>📚将选择器文本，对象数组，NodeList或者元素对象，以及所有类数组对象（比如jQuery选择器返回的对象）获取到的元素转换为扁平化的数组</p><ul><li>这个工具函数用的还比较多</li></ul><p>它存在 <code>1</code> 种形式：</p><ol><li><code>toArray(targets[, scope])</code> 返回一个数组 <ul><li><code>targets: Object|String|NodeList|Array</code> - 你想要包装进扁平数组的目标</li><li><code>scope: Element|Ref</code> - 可选！用于限定选择的范围，可以是一个元素或者React Ref。<strong>这只对<code>targets</code>为选择器文本（eg. <code>.box</code>）才生效🚨</strong></li></ul></li></ol><p>🌰</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1️⃣ 选择器文本</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> targets </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toArray</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.class</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2️⃣ 元素对象</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> targets </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toArray</span><span style="color:#A6ACCD;">(myElement)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3️⃣ 选择器数组</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> targets </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toArray</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.class1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,class2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#my-id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;">// 4️⃣ 限定选择的返回；只选择 myElement 的子代元素中的 \`.class\` 元素 😎</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> targets </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toArray</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.class</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> myElement)</span></span>
<span class="line"></span></code></pre></div><p>文档地址：</p><ul><li><a href="https://greensock.com/docs/v3/GSAP/UtilityMethods/toArray()" target="_blank" rel="noreferrer">gsap.utils.toArray()</a></li></ul><details class="details custom-block"><summary>📚TS定义</summary><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* Converts almost anything into a flat Array.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* \`\`\`js</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* const targets = gsap.utils.toArray(&quot;.class&quot;);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* const targets = gsap.utils.toArray(myElement);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* const targets = gsap.utils.toArray($(&quot;.class&quot;));</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* const targets = gsap.utils.toArray([&quot;.class1&quot;, &quot;.class2&quot;]);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* \`\`\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">string | object | Element | null</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">value</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">object</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">[</span><span style="color:#A6ACCD;font-style:italic;">scope</span><span style="color:#89DDFF;font-style:italic;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">boolean</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">[</span><span style="color:#A6ACCD;font-style:italic;">leaveStrings</span><span style="color:#89DDFF;font-style:italic;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">returns</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">T[]</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> The converted Array</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">memberof</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#FFCB6B;font-style:italic;">gsap.utils</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toArray</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Element</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">scope</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">leaveStrings</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div></details><p>2022年11月13日18:05:32</p>`,10),p=[o];function e(c,r,y,i,D,F){return a(),l("div",null,p)}const f=s(t,[["render",e]]);export{C as __pageData,f as default};
