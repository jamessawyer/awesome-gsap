import{_ as e,c as l,o as s,a}from"./app.586394ea.js";const y=JSON.parse('{"title":"gsap.globalTimeline","description":"","frontmatter":{"title":"gsap.globalTimeline"},"headers":[],"relativePath":"v3/globals/properties/globalTimeline.md","lastUpdated":1676275730000}'),o={name:"v3/globals/properties/globalTimeline.md"},n=a(`<p>📚 <code>gsap.globalTimeline</code> 是根时间轴实例，它用于驱动GSAP所有的内容，使其成为 <strong><code>一次性</code></strong> 影响所有动画的强大方式😎。</p><ul><li>记住，<a href="./../methods/delayedCall.html">gsap.delayedCall()</a>方法本质上还是补间动画，因此，如果你对 <code>globalTimeline</code> 使用 <a href="https://greensock.com/docs/v3/GSAP/Timeline/pause()" target="_blank" rel="noreferrer">pause()</a> 或 <a href="https://greensock.com/docs/v3/GSAP/Timeline/timeScale()" target="_blank" rel="noreferrer">timeScale()</a>方法，是会影响到delayedCalls()的</li><li>如果你想忽略对delayedCalls或者其他tweens或timelines的影响，可以使用 <a href="./../methods/exportRoot.html">gsap.exportRoot()</a></li></ul><p>有用的方法：<code>全局时间轴本质上也是一个时间轴，因此它的方法本质上就是时间轴方法</code></p><ol><li><p><a href="https://greensock.com/docs/v3/GSAP/Timeline/pause()" target="_blank" rel="noreferrer">gsap.globalTimeline.pause()</a> - 暂停全局时间轴会影响到<strong>所有的</strong>动画。这个方法返回自身（<code>this</code>）</p></li><li><p><a href="https://greensock.com/docs/v3/GSAP/Timeline/play()" target="_blank" rel="noreferrer">gsap.globalTimeline.play()</a> - 恢复全局时间轴会影响到 <strong>所有的</strong> 动画。这个方法返回自身（<code>this</code>）</p></li><li><p><a href="https://greensock.com/docs/v3/GSAP/Timeline/paused()" target="_blank" rel="noreferrer">gsap.globalTimeline.paused()</a> - 判断是否暂停了全局时间轴，暂停了返回 <code>true</code>；没有暂停返回 <code>false</code></p></li><li><p><a href="https://greensock.com/docs/v3/GSAP/Timeline/timeScale()" target="_blank" rel="noreferrer">⚡gsap.globalTimeline.timeScale()</a> - 获取或设置全局时间刻度（<code>scale</code>），它是影响所有动画的乘法系数。它不是去对每个单独的tweens或timelines的 <code>timeScale()</code> 进行设置，而是对根时间轴（包含所有的tweens &amp; timelines）的时间刻度进行设置。<code>通过它对所有动画一次性的进行加速或者减速</code>🤩，比如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">globalTimeline</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeScale</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.5</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 0.5倍速播放 \`所有\` 动画</span></span>
<span class="line"><span style="color:#A6ACCD;">gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">globalTimeline</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeScale</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">// 2倍速播放 \`所有\` 动画</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取当前时间刻度</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> currentTimeScale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">globalTimeline</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeScale</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div></li></ol><div class="info custom-block"><p class="custom-block-title">INFO</p><p>因为全局时间轴用于运行所有的Tweens &amp; Timelines，因此无论是否存在任何tweens或者timelines处于激活状态，<code>gsap.globalTimeline.isActive()</code> 总是返回 <code>true</code>。可以将其理解为gsap里面的主线程😎。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>快速理解：globalTimeline属性上的方法可一次性对所有动画进行暂停，恢复播放，减速加速播放</p></div><p>文档地址：</p><ul><li><a href="https://greensock.com/docs/v3/GSAP/gsap.globalTimeline" target="_blank" rel="noreferrer">gsap.globalTimeline</a></li></ul><p>2022年11月24日10:24:51</p>`,9),t=[n];function p(c,i,r,d,m,g){return s(),l("div",null,t)}const C=e(o,[["render",p]]);export{y as __pageData,C as default};
