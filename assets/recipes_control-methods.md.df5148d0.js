import{_ as s,c as n,o as a,a as l}from"./app.586394ea.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"recipes/control-methods.md","lastUpdated":1676275730000}'),p={name:"recipes/control-methods.md"},o=l(`<p>可以通过动画实例，使用方法（或者直接赋值）对动画进行控制：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line highlighted"><span style="color:#676E95;font-style:italic;">// 保留动画引用，以便之后进行控制</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> anim </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gsap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 或者 gsap.timeline(...)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#676E95;font-style:italic;">// 1️⃣ 大多数方法也可以通过 \`getters\` || \`setters\` 方式使用（即直接赋值）</span></span>
<span class="line"><span style="color:#A6ACCD;">anim</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">play</span><span style="color:#A6ACCD;">()           </span><span style="color:#676E95;font-style:italic;">// 播放</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pause</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resume</span><span style="color:#A6ACCD;">()           </span><span style="color:#676E95;font-style:italic;">// 恢复动画，保留方向</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reverse</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">restart</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timeScale</span><span style="color:#A6ACCD;">()        </span><span style="color:#676E95;font-style:italic;">// 2 -&gt; 2倍速度，0.5 -&gt; 0.5倍速</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">seek</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.5</span><span style="color:#A6ACCD;">)          </span><span style="color:#676E95;font-style:italic;">// 跳转到时间点（单位 s）或者指定label位置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">progress</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.5</span><span style="color:#A6ACCD;">)      </span><span style="color:#676E95;font-style:italic;">// 跳到动画一般进度位置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">totalProgress</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.8</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 包含 repeats</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当用作setter，返回animation（用于链式调用）</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 2️⃣ 其它有用方法（Tweens &amp; Timeines）</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">kill</span><span style="color:#A6ACCD;">()          </span><span style="color:#676E95;font-style:italic;">// 立即销毁动画</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isActive</span><span style="color:#A6ACCD;">()      </span><span style="color:#676E95;font-style:italic;">// 如果正在动画，则返回true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">()          </span><span style="color:#676E95;font-style:italic;">// Promise</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">invalidate</span><span style="color:#A6ACCD;">()    </span><span style="color:#676E95;font-style:italic;">// 清除记录的 start/end 值</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eventCallback</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// get/set 一个事件回调</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 3️⃣ timelines特有方法</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 添加 label, tween, timeline 或 callback</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(thing</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> position)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 在给定位置调用函数</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#A6ACCD;">(func</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> position)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取timeline子tween|timeline数组</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getChildren</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 清空时间轴</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clear</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 线性的动画到指定位置 </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tweenTo</span><span style="color:#A6ACCD;">(timeOrLabel</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">vars</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 同时包含开始和结束位置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tweenFromTo</span><span style="color:#A6ACCD;">(from</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> to</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">vars</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>2022年10月14日15:56:14</p>`,3),e=[o];function t(c,r,y,A,i,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
