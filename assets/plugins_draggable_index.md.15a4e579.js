import{_ as l,c as o,o as e,a,b as s,d as n}from"./app.586394ea.js";const h=JSON.parse('{"title":"Draggable","description":"","frontmatter":{"title":"Draggable"},"headers":[{"level":2,"title":"1️⃣ 使用","slug":"_1️⃣-使用","link":"#_1️⃣-使用","children":[]},{"level":2,"title":"2️⃣ 配置对象属性","slug":"_2️⃣-配置对象属性","link":"#_2️⃣-配置对象属性","children":[{"level":3,"title":"activeCursor: {String}","slug":"activecursor-string","link":"#activecursor-string","children":[]},{"level":3,"title":"allowContextMenu: {Boolean}","slug":"allowcontextmenu-boolean","link":"#allowcontextmenu-boolean","children":[]},{"level":3,"title":"allowNativeTouchScrolling: {Boolean}","slug":"allownativetouchscrolling-boolean","link":"#allownativetouchscrolling-boolean","children":[]},{"level":3,"title":"autoScroll: {Number}","slug":"autoscroll-number","link":"#autoscroll-number","children":[]},{"level":3,"title":"⭐bounds: {Element|String|Object}","slug":"⭐bounds-element-string-object","link":"#⭐bounds-element-string-object","children":[]},{"level":3,"title":"callbackScope: {Object}","slug":"callbackscope-object","link":"#callbackscope-object","children":[]},{"level":3,"title":"clickableTest: {Function}","slug":"clickabletest-function","link":"#clickabletest-function","children":[]},{"level":3,"title":"⭐cursor: {String}","slug":"⭐cursor-string","link":"#⭐cursor-string","children":[]},{"level":3,"title":"dragClickables: {Boolean}","slug":"dragclickables-boolean","link":"#dragclickables-boolean","children":[]},{"level":3,"title":"⭐dragResistance: {Number}","slug":"⭐dragresistance-number","link":"#⭐dragresistance-number","children":[]},{"level":3,"title":"edgeResistance: {Number}","slug":"edgeresistance-number","link":"#edgeresistance-number","children":[]},{"level":3,"title":"force3D: {Boolean}","slug":"force3d-boolean","link":"#force3d-boolean","children":[]},{"level":3,"title":"inertia: {Boolean | Object}","slug":"inertia-boolean-object","link":"#inertia-boolean-object","children":[]},{"level":3,"title":"⭐ liveSnap: {Function | Boolean | Array | Object}","slug":"⭐-livesnap-function-boolean-array-object","link":"#⭐-livesnap-function-boolean-array-object","children":[]},{"level":3,"title":"⭐ lockAxis: {Boolean}","slug":"⭐-lockaxis-boolean","link":"#⭐-lockaxis-boolean","children":[]},{"level":3,"title":"minimumMovement: {Number}","slug":"minimummovement-number","link":"#minimummovement-number","children":[]},{"level":3,"title":"onClick: {Function}","slug":"onclick-function","link":"#onclick-function","children":[]},{"level":3,"title":"onClickParams: {Array}","slug":"onclickparams-array","link":"#onclickparams-array","children":[]},{"level":3,"title":"⭐ onDrag: {Function}","slug":"⭐-ondrag-function","link":"#⭐-ondrag-function","children":[]},{"level":3,"title":"onDragParams: {Array}","slug":"ondragparams-array","link":"#ondragparams-array","children":[]},{"level":3,"title":"⭐ onDragEnd: {Function}","slug":"⭐-ondragend-function","link":"#⭐-ondragend-function","children":[]},{"level":3,"title":"onDragEndParams: {Array}","slug":"ondragendparams-array","link":"#ondragendparams-array","children":[]},{"level":3,"title":"⭐ onDragStart: {Function}","slug":"⭐-ondragstart-function","link":"#⭐-ondragstart-function","children":[]},{"level":3,"title":"onDragStartParams: {Array}","slug":"ondragstartparams-array","link":"#ondragstartparams-array","children":[]},{"level":3,"title":"onLockAxis: {Function}","slug":"onlockaxis-function","link":"#onlockaxis-function","children":[]},{"level":3,"title":"onMove: {Function}","slug":"onmove-function","link":"#onmove-function","children":[]},{"level":3,"title":"onPress: {Function}","slug":"onpress-function","link":"#onpress-function","children":[]},{"level":3,"title":"onPressInit: {Function}","slug":"onpressinit-function","link":"#onpressinit-function","children":[]},{"level":3,"title":"onPressParmas: {Array}","slug":"onpressparmas-array","link":"#onpressparmas-array","children":[]},{"level":3,"title":"onRelease: {Function}","slug":"onrelease-function","link":"#onrelease-function","children":[]},{"level":3,"title":"onReleaseParams: {Array}","slug":"onreleaseparams-array","link":"#onreleaseparams-array","children":[]},{"level":3,"title":"⭐ trigger: {Element | String | Object}","slug":"⭐-trigger-element-string-object","link":"#⭐-trigger-element-string-object","children":[]},{"level":3,"title":"⭐ type: {String}","slug":"⭐-type-string","link":"#⭐-type-string","children":[]},{"level":3,"title":"zIndexBoost: {Boolean}","slug":"zindexboost-boolean","link":"#zindexboost-boolean","children":[]}]},{"level":2,"title":"3️⃣ Snapping 用法","slug":"_3️⃣-snapping-用法","link":"#_3️⃣-snapping-用法","children":[{"level":3,"title":"数组形式捕获","slug":"数组形式捕获","link":"#数组形式捕获","children":[]},{"level":3,"title":"函数形式自定义逻辑","slug":"函数形式自定义逻辑","link":"#函数形式自定义逻辑","children":[]},{"level":3,"title":"获取速度","slug":"获取速度","link":"#获取速度","children":[]},{"level":3,"title":"注意事项 & 依赖 & 限制","slug":"注意事项-依赖-限制","link":"#注意事项-依赖-限制","children":[]}]},{"level":2,"title":"4️⃣ Draggable 示例","slug":"_4️⃣-draggable-示例","link":"#_4️⃣-draggable-示例","children":[]}],"relativePath":"plugins/draggable/index.md","lastUpdated":1676275730000}'),p={name:"plugins/draggable/index.md"},c=a(`<p>示例文档：</p><ul><li><a href="https://greensock.com/draggable/" target="_blank" rel="noreferrer">draggable - gsap</a></li></ul><p>提供了一种令人惊讶的简单方法，使用鼠标和/或触摸事件使几乎任何DOM元素都可拖动(<code>draggable</code>)、可旋转(<code>spinnable</code>)、可抛出(<code>tossable</code>)，甚至可滑动滚动，并且Draggable还可以和 <code>InertiaPlugin</code> 结合使用，这样用户可以根据动量平滑地减速。</p><p>特色功能：</p><ul><li><code>支持Touch</code>： 可以用于平板，手机和桌面端浏览器</li><li><code>非常平滑</code>：GPU加速和 <code>requestAnimationFrame</code> - 最大化性能优化。对比其它工具，Draggable更加的自然和流畅，特别是在添加边界和动量时</li><li><code>基于动量（Momentum-based）动画</code>：如果你使用了 <code>InertiaPlugin</code> 插件，你只需在 <code>config</code> 对象中添加 <code>inertia: true</code> 即可😎，它会自动在鼠标和touch释放后添加自然的，基于动量的动作，使物体顺滑的停下。你还可以控制 <code>resistance</code>（阻尼） 的量，以及最大或最小的 <code>duration</code> 等等</li><li><code>⭐ 添加边界</code>：告诉可拖动元素限定在另一个DOM元素（容器）边界内，设置方式也很简单，比如以下几种方式： <ul><li><code>bounds: &#39;#container&#39;</code></li><li><code>bounds: { top: 100, left: 0, width: 1000, height: 800 }</code></li><li><code>bounds: { minRotation: 0, maxRotation: 270 }</code></li></ul></li><li><code>⭐ 使用 hitTest() 感知重叠</code>：查看一个元素是否和另一个元素存在重叠，或使用非常灵活的 <code>Draggable.hitTest()</code> 方法设置一个忍耐阈值（比如至少20px 或者 每个元素总表面区域的25%），参数为mouse event，它会告诉你是否鼠标经过了该元素</li><li><code>定义触发元素</code>：你可能想要只在特定区域触发拖动（比如window的顶部） - 设置很简单，比如 <code>trigger: &#39;#topBar&#39;</code></li><li><code>拖动位置或旋转</code>：多种拖动类型可以选择 <ul><li><code>[&#39;x,y&#39; | &#39;top,left&#39; | &#39;rotation&#39; | &#39;x&#39; | &#39;y&#39; | &#39;top&#39; | &#39;left&#39;]</code></li></ul></li><li><code>⭐ 锁定特定轴</code>：设置 <code>lockAxis: true</code>，Draggable会观察用户开始拖动的方向，然后将其限制在该轴。或者如果你只想允许垂直或水平方向的运动，就可以使用下面这些类型 <ul><li><code>type: &quot;top&quot;</code> | <code>type: &quot;y&quot;</code> 只允许垂直方向的运行</li><li><code>type: &quot;left&quot;</code> | <code>type: &quot;x&quot;</code> 只允许水平方向的运动</li></ul></li><li><code>使用transform origin改变旋转轴心</code>：默认情况，旋转的元素会以它们的中心进行旋转，但是你可以设置 <code>transformOrigin</code> 改变轴心点 <ul><li>在拖动前调用 <code>gsap.set(yourElement, { transformOrigin: &#39;top left&#39; })</code>，它将以左上角为轴心进行旋转</li><li>或使用 <code>% | px</code> 设置 <code>transformOrigin</code> 都是可以的</li></ul></li><li><code>⭐ 丰富的回调系统和时事件分发</code>：可以使用下面这些回调 <code>onPress | onDragStart | onDrag | onDragEnd | onRelease | onLockAxis | onClick</code>，在回调内，<code>this</code> 指向Draggable实例本身，因此可以轻松的访问 <code>target | bounds</code> 等属性。如果你更喜欢事件监听，Draggable也对事件进行了分发，比如 <code>yourDraggable.addEventListener(&#39;dragend&#39;, yourFunc)</code></li><li><code>能很好的和SVG一起工作</code></li><li><code>对transformed容器也能使用</code> - 想拖动旋转或者缩放容器中的元素？没有问题。其余工具处理这个很困难😎</li><li><code>自动滚动，即使在多个容器中</code> - 设置 <code>autoScroll: 1</code> 表示正常速度的自动滚动；<code>autoScroll: 2</code> 表示2倍滚动速度，等等。你朝边界移动得越近，滚动越快</li><li><code>当元素移动少于3px时，感知点击</code> - 一个很常见的挑战是，识别用户是点击或者tap物体还是拖动物体，因此如果 <code>mouse | touch</code> 事件从开始位置移动少于3px，则认为是点击，<code>onClick</code> 回调会被触发，你也可以使用 <code>minimumMovement</code> 定义一个不同的阈值，比如 <code>minimumMovement: 6</code> 表示 <code>6px</code></li></ul><h2 id="_1️⃣-使用" tabindex="-1">1️⃣ 使用 <a class="header-anchor" href="#_1️⃣-使用" aria-hidden="true">#</a></h2><p>使一个元素可拖动（水平和垂直）最简单形式如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#yourID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>这会简单的找到ID为 <code>yourID</code> 的元素，使其变得可拖动，没有边界，释放后也没有任何动量动作，除了选择器外，你还以传入DOM元素或者jQuery对象。 使用 <code>vars</code> 参数配置各种配置选项。比如，使用 <code>y</code> transform限定物体只能在垂直方向拖动，或者限定拖动的边界，各种回调：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#yourID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">bounds</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inertia</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 使用 InertiaPlugin，该插件是付费的</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onClick</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">clicked</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onDragEnd</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">drag end</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>或者使物体 <strong>旋转</strong>（拖动旋转元素）：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#yourID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rotation</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inertia</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>并且可以在mouse/touch释放后添加捕获 <code>90°</code>，可使用snap配置项：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#yourID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rotation</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inertia</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 📚 snap可理解为 &quot;捕获&quot; 或者 &quot;吸附&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 当鼠标/手指被释放时，这个函数被InertiaPlugin调用，</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 它表示旋转应该结束的位置，我们可以改变那个值并返回一个新的值。</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 这为我们提供了一种简单的方法，可以使用我们想要的任何逻辑应用自定义捕获行为。</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 在本例中，我们只是确保结束值以90度的增量进行捕获（snap）</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">90</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="_2️⃣-配置对象属性" tabindex="-1">2️⃣ 配置对象属性 <a class="header-anchor" href="#_2️⃣-配置对象属性" aria-hidden="true">#</a></h2><h3 id="activecursor-string" tabindex="-1"><code>activeCursor: {String}</code> <a class="header-anchor" href="#activecursor-string" aria-hidden="true">#</a></h3><p>按压和释放potiner或mouse时<code>cursor</code>的CSS值。可以是不同的普通cursor值，比如 <code>cursor: &quot;grab&quot;</code>, <code>activeCursor: &quot;grabbing&quot;</code></p><h3 id="allowcontextmenu-boolean" tabindex="-1"><code>allowContextMenu: {Boolean}</code> <a class="header-anchor" href="#allowcontextmenu-boolean" aria-hidden="true">#</a></h3><p>默认是 <code>false</code></p><p>如果为 <code>true</code>，Draggable允许上下文菜单（比如用户右击或者长触摸）。一般在拖动的过程中，这个是被禁用的（特别是触摸设备）。</p><h3 id="allownativetouchscrolling-boolean" tabindex="-1"><code>allowNativeTouchScrolling: {Boolean}</code> <a class="header-anchor" href="#allownativetouchscrolling-boolean" aria-hidden="true">#</a></h3><p>默认是 <code>true</code></p><p>默认情况下，允许你在相反的方向原生触摸滚动就好像Draggables被限制在一个轴。比如，使用了 <code>type: &#39;x&#39; | type: &#39;left&#39;</code> 的Draggable，允许在垂直方向的原生触摸滚动，而 <code>type: &#39;y&#39; | type: &#39;top&#39;</code> 允许在水平方向的触摸滚动。</p><h3 id="autoscroll-number" tabindex="-1"><code>autoScroll: {Number}</code> <a class="header-anchor" href="#autoscroll-number" aria-hidden="true">#</a></h3><p>默认值是 <code>0</code>，即不会自动滚动</p><p>当被拖动物体在可滚动容器的 <code>40px</code> 边界时开始自动滚动，将其设置为一个非0值，<code>1</code> 表示正常速度，<code>2</code> 表示2倍速度等。为了更自然的体验，当鼠标越靠近边缘，滚动速度也越快</p><h3 id="⭐bounds-element-string-object" tabindex="-1"><code>⭐bounds: {Element|String|Object}</code> <a class="header-anchor" href="#⭐bounds-element-string-object" aria-hidden="true">#</a></h3><p>使可拖动对象限定在某个DOM元素（比如容器）边界。可以传入一个元素，比如 <code>bounds: document.getElementById(&#39;container&#39;)</code>或者jQuery对象，或者选择器 <code>#container</code>.</p><p>还可以定义矩形边界：<code>bounds: { top: 100, left: 0, width: 1000, height: 800 }</code>，它是基于父元素的坐标系统的</p><p>或者定义特定的最大和最小值，比如 <code>bounds: { minX: 10, maxX: 300, minY: 50, maxY: 500 }</code> 或者 <code>bounds: { minRotation: 0, maxRotation: 270 }</code></p><h3 id="callbackscope-object" tabindex="-1"><code>callbackScope: {Object}</code> <a class="header-anchor" href="#callbackscope-object" aria-hidden="true">#</a></h3><p>用于所有回调（<code>onDrag</code>, <code>onDragEnd</code>等）的作用域。这个作用域是回调内 <code>this</code> 的指向</p><h3 id="clickabletest-function" tabindex="-1"><code>clickableTest: {Function}</code> <a class="header-anchor" href="#clickabletest-function" aria-hidden="true">#</a></h3><p>拖动对象可能包含可点击的子元素，比如 <code>&lt;a&gt;</code>标签链接， <code>&lt;button&gt;</code> 或者 <code>&lt;input&gt;</code>元素等。</p><p>默认情况，对这些元素的点击或者tap处理是不同的，不允许用户对其进行拖拽。你可以设置 <code>dragClickables: false</code> 覆盖这种行为，但是如果能控制这些可点击元素的行为那就更棒了，使用这个函数你可以接收该可点击元素作为唯一参数，返回 <code>true | false</code>。Draggable会在用户按压鼠标或者手指按压可拖动元素时，调用这个函数</p><h3 id="⭐cursor-string" tabindex="-1"><code>⭐cursor: {String}</code> <a class="header-anchor" href="#⭐cursor-string" aria-hidden="true">#</a></h3><p>默认（除了 <code>type: &#39;rotation&#39;</code> 情况）CSS属性为 <code>cursor: move</code>。你也可以将其设置为 <code>cursor: &#39;pointer&#39;</code></p><ul><li><a href="https://devdocs.io/css/cursor" target="_blank" rel="noreferrer">devdocs.io/cursor</a></li></ul><h3 id="dragclickables-boolean" tabindex="-1"><code>dragClickables: {Boolean}</code> <a class="header-anchor" href="#dragclickables-boolean" aria-hidden="true">#</a></h3><p>默认情况，Draggable可对很多种元素都能生效，但有时你可能想点击 <code>&lt;a&gt; | &lt;button&gt; | &lt;select&gt; | &lt;button&gt; | &lt;textarea&gt;</code> 元素（或者任何带有 <code>data-clickable=&quot;true&quot;</code> 的元素）,而不触发拖拽，而是使用浏览器默认的行为，比如点击input，聚焦到该元素，因此你可能想要Draggable忽略这些点击，从而允许默认的行为，则可以设置为 <code>dragClickables: false</code></p><h3 id="⭐dragresistance-number" tabindex="-1"><code>⭐dragResistance: {Number}</code> <a class="header-anchor" href="#⭐dragresistance-number" aria-hidden="true">#</a></h3><p><code>0-1</code>之间的数值，表示拖动元素的抗性，<code>1</code> 表示完全不允许拖动，<code>0.75</code> 应用更多抵抗性（使对象以1/4速度运动）， <code>0.5</code> 表示半速。<strong>这同样适用于 <code>rotation</code> 情况</strong></p><h3 id="edgeresistance-number" tabindex="-1"><code>edgeResistance: {Number}</code> <a class="header-anchor" href="#edgeresistance-number" aria-hidden="true">#</a></h3><p>一个介于0到1之间的数字，它控制在元素超出边界(如果施加了任何阻力)时施加到元素上的阻力的程度。</p><ul><li><code>1</code>不允许物体被拖出边界时，</li><li><code>0.75</code>会施加很大的阻力(让物体在拖出边界时以四分之一的速度移动)，</li><li><code>0.5</code>则会以一半的速度移动，以此类推。</li><li><strong>这同样适用于 <code>rotation</code> 情况</strong></li></ul><h3 id="force3d-boolean" tabindex="-1"><code>force3D: {Boolean}</code> <a class="header-anchor" href="#force3d-boolean" aria-hidden="true">#</a></h3><p>默认情况使用3D transform，为了强制元素在自己图层使用GPU，加速合成。一般这可以提供最佳性能，但是你可以通过 <code>force3D: false</code> 禁用。这对你拖动的元素包含动画元素的场景比较好。</p><h3 id="inertia-boolean-object" tabindex="-1"><code>inertia: {Boolean | Object}</code> <a class="header-anchor" href="#inertia-boolean-object" aria-hidden="true">#</a></h3><p>InertiaPlugin是用户鼠标（或touch）释放之后基于动量动画动效的关键。为了让可拖动物体自动添加一个InertiaPlugin tween动画，你可以设置 <code>inertia: true</code>。</p><p>对于更加高级的效果，你可以定义inertia对象，它将反馈给tween，比如，<code>inertia: { top: {min: 0, max: 1000, end: [0, 200, 400, 600]} }</code>。然而，如果你想完全控制InertiaPlugin Tween, 你可以使用 <code>onDragEnd</code> 调用你自定义函数，该函数可以创建一个tween进行动画😎</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(box</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">bounds</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> window</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onDragEnd</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">onDragEnd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">gsap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">300</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>🚨 <code>InertiaPlugin</code> 是会员插件。</p></div><p>如果你定义了 <code>inertia: true</code>，你也可以使用以下任何配置属性，应用于鼠标/触摸释放后的移动:</p><blockquote><p><code>⭐ snap: {Function | Object | Array}</code></p></blockquote><p>允许你定义元素被释放后可以落在哪里的规则。比如，你想总是以90度的增量进行旋转，或者 <code>x</code> | <code>y</code> 值刚好吸附到某个网格中（单元格最近的落点）或者落在特定的位置，可以有几种方式定义这个属性：</p><ul><li><p><strong>函数形式</strong>：这个函数将被传递一个数值参数，即自然结束值。函数必须返回新的结束值(你可以在函数内运行任何你想要的逻辑并返回值)。例如，要使值对齐到最接近的增量50，可以：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>数组形式</strong>：如果使用值数组，InertiaPlugin将首先绘制自然着落位置，然后遍历数组并找到最接近的数字(只要它不超出您定义的任何边界)。例如，让它从10、50、200和450中选择最接近的数字</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">450</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>对象形式</strong>：如果你想对每个属性使用不同的逻辑</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1️⃣ 如果\`type: &quot;x,y&quot;\`你想让\`x\`部分固定到一组值，而\`y\`部分固定到另一组值，你可以使用一个具有匹配属性的对象</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">400</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">500</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2️⃣ 如果 \`type: &quot;top,left&quot;\`，你想对每个值使用不同的函数</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3️⃣ 你可以在这个对象中定义点属性，结合 x 和 y</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//  它会在20px(距离)范围内的数组中任意点上对齐</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4️⃣ 你甚至可以使用基于函数的值来运行自己的捕获逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">point</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 自定义逻辑</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ul><blockquote><p><code>onThrowUpdate: {Function}</code></p></blockquote><p>每次InertiaPlugin补间更新/渲染时都应该调用的函数(基本上是在补间激活时引擎的每次“Tick”)。这只适用于在用户释放鼠标/触摸后生成的补间—在用户拖动元素时不会调用该函数（这正是 <code>onDrag</code> 函数的作用）。</p><p>默认情况，<code>onThrowUpdate</code> 作用域是Draggable实例自身，但是你也可以像其他Tween一样定义 <code>callbackScope</code></p><blockquote><p><code>onThrowComplete: {Function}</code></p></blockquote><p>当InertiaPlugin补间完成时应该调用的函数。这只适用于在用户释放鼠标/触摸后生成的补间——当用户释放鼠标/触摸时，该函数不会立即调用 - 这正是 <code>onDragEnd</code> 的作用。</p><p>默认情况，<code>onThrowComplete</code> 作用域是Draggable实例自身，但是你也可以像其他Tween一样定义 <code>callbackScope</code></p><blockquote><p><code>throwResistance: {Number}</code></p></blockquote><p>一个数字(默认为1000)，用于控制在释放鼠标/触摸和启用基于动量的运动时的阻力或摩擦力（通过设置 <code>inertia: true</code>）。数值越大，阻力越大，运动减速越快。（需要InertiaPlugin并设置<code>inertia: true</code>，否则<code>throwResistance</code>将被忽略。）</p><blockquote><p><code>maxDuration: {Number}</code></p></blockquote><p>基于动力的惯性间的最大持续时间(以秒为单位)。InertiaPlugin将自动分析速度和边界，并确定适当的持续时间(更快的移动通常会导致更长的过渡时间来减速)，但你可以通过定义maxDuration来限制持续时间。</p><p>默认值是10秒。这与用户可以拖动对象的最长时间无关——这只是在他们释放鼠标/触摸后产生的惯性补间。（需要InertiaPlugin并设置<code>inertia: true</code>，否则<code>maxDuration</code>将被忽略。）</p><blockquote><p><code>minDuration: {Number}</code></p></blockquote><p>基于动力的惯性间应持续的最小持续时间(以秒为单位)。InertiaPlugin将自动分析速度和边界并确定适当的持续时间(更快的移动通常会导致更长的补间时间来减速)，但你可以通过定义minDuration来强制补间至少需要一定的时间。</p><p>默认值是0.2秒。这与用户可以拖动对象的最短时间无关——这只是在他们释放鼠标/触摸后产生的惯性补间。（需要InertiaPlugin并设置<code>inertia: true</code>，否则<code>minDuration</code>将被忽略。）</p><blockquote><p><code>overshootTolerance: {Number}</code></p></blockquote><p>影响在渐变结束时平滑返回到静止位置之前允许的超过量。当弹动的初始速度通常会导致它超过<code>边界/最小值/最大值</code>时，就会发生这种情况。<code>overshotTolerance</code>公差越大，在必要的情况下，补间有更多的余地临时超过最大/最小。</p><p>默认值为1。如果不允许任何overshooting，可以将其设置为0。</p><h3 id="⭐-livesnap-function-boolean-array-object" tabindex="-1"><code>⭐ liveSnap: {Function | Boolean | Array | Object}</code> <a class="header-anchor" href="#⭐-livesnap-function-boolean-array-object" aria-hidden="true">#</a></h3><p>允许你定义当元素正在被拖动时的规则（而普通的snap只会影响到其<code>最终值</code>，即拖拽释放后元素将移动到哪里）。比如，你想每次旋转 <code>10°</code> 的增量或者 <code>x &amp; y</code> 吸附到最近的网格。则可以通过下面定义这个属性：</p><ul><li><p><strong>函数形式</strong>：这个函数将被传递一个数值参数，即自然结束值。函数必须返回新的结束值(你可以在函数内运行任何你想要的逻辑并返回值)。例如，要使值对齐到最接近的增量50，可以：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>数组形式</strong>：如果使用值数组，InertiaPlugin将首先绘制自然着落位置，然后遍历数组并找到最接近的数字(只要它不超出您定义的任何边界)。例如，让它从10、50、200和450中选择最接近的数字</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">450</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>对象形式</strong>：如果你想对每个属性使用不同的逻辑</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1️⃣ 如果\`type: &quot;x,y&quot;\`你想让\`x\`部分固定到一组值，而\`y\`部分固定到另一组值，你可以使用一个具有匹配属性的对象</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">400</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">500</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2️⃣ 如果 \`type: &quot;top,left&quot;\`，你想对每个值使用不同的函数</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">snap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">top</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">left</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">endValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">endValue</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3️⃣ 你可以在这个对象中定义点属性，结合 x 和 y</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//  它会在20px(距离)范围内的数组中任意点上对齐</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4️⃣ 你甚至可以使用基于函数的值来运行自己的捕获逻辑</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">point</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 自定义逻辑</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><strong>布尔值（true）</strong>：live snapping 将使用定义的 <code>snap</code> 值（它在拖动是实时的，而不仅仅针对最终值😎）</p></li></ul><h3 id="⭐-lockaxis-boolean" tabindex="-1"><code>⭐ lockAxis: {Boolean}</code> <a class="header-anchor" href="#⭐-lockaxis-boolean" aria-hidden="true">#</a></h3><p>如果为 <code>true</code>，只要在某个方向（水平或者垂直方向）移动超过 <code>2px</code>，就会锁定为该方向。不允许对角线的移动。</p><p>很明显这只适用于 <code>type</code> 为 <code>x,y</code> 或者 <code>top,left</code> ：</p><ul><li>如果只允许垂直方向的移动，则 <code>type</code> 设置为 <code>y</code> 或者 <code>top</code></li><li>如果只允许水平方向的移动，则 <code>type</code> 设置为 <code>x</code> 或者 <code>left</code></li></ul><h3 id="minimummovement-number" tabindex="-1"><code>minimumMovement: {Number}</code> <a class="header-anchor" href="#minimummovement-number" aria-hidden="true">#</a></h3><p>默认情况下，Draggable需要被拖动元素移动超过 <code>2px</code> 才被认为是拖动操作，但是你可以通过 <code>minimumMovement</code> 改变这个阈值。</p><ul><li><code>minimumMovement: 6</code> 表示超过 <code>6px</code> 才认为是拖动操作</li></ul><h3 id="onclick-function" tabindex="-1"><code>onClick: {Function}</code> <a class="header-anchor" href="#onclick-function" aria-hidden="true">#</a></h3><p>当点击元素，释放前没有移动超过 <code>3px</code> 时被被当做点击处理，这个函数被调用。<strong>这用于分辨用户意图：<code>点击还是拖动</code></strong>。</p><p>函数内部， <code>this</code> 指向Draggable示例（除非你用 <code>callbackScope</code> 特意设置作用域），通过 <code>this.target</code> 可以轻松的访问目标元素，或者边界坐标（<code>this.maxX</code> | <code>this.minX</code> | <code>this,maxY</code> | <code>this.minY</code>）😎</p><p>默认情况，<code>pointerEvent</code> 是回调的唯一参数，通过它可以访问 <code>pageX | pageY | target | currentTarget</code> 等等。</p><h3 id="onclickparams-array" tabindex="-1"><code>onClickParams: {Array}</code> <a class="header-anchor" href="#onclickparams-array" aria-hidden="true">#</a></h3><p>给 <code>onClick</code> 函数提供的可选参数数组。比如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">onClickParams</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">clicked</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">onClick</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">message</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// &#39;click 5&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="⭐-ondrag-function" tabindex="-1"><code>⭐ onDrag: {Function}</code> <a class="header-anchor" href="#⭐-ondrag-function" aria-hidden="true">#</a></h3><p>只要拖拽目标时就会一直触发这个函数。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这个每次 requestAnimationFrame 时调用，性能最大化😎。</p></div><h3 id="ondragparams-array" tabindex="-1"><code>onDragParams: {Array}</code> <a class="header-anchor" href="#ondragparams-array" aria-hidden="true">#</a></h3><p>同 <code>onClickParams</code>，它给 <code>onDrag</code> 提供额外的参数</p><h3 id="⭐-ondragend-function" tabindex="-1"><code>⭐ onDragEnd: {Function}</code> <a class="header-anchor" href="#⭐-ondragend-function" aria-hidden="true">#</a></h3><p>拖拽 <code>释放时</code> 调用的回调函数 。🚨即使目标没有移动，<code>onDragEnd</code> 也会被触发，而 <code>onClick</code> 只在目标移动少于 <code>3px</code> 时才触发。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><h3 id="ondragendparams-array" tabindex="-1"><code>onDragEndParams: {Array}</code> <a class="header-anchor" href="#ondragendparams-array" aria-hidden="true">#</a></h3><p>同 <code>onDragParams</code>。</p><h3 id="⭐-ondragstart-function" tabindex="-1"><code>⭐ onDragStart: {Function}</code> <a class="header-anchor" href="#⭐-ondragstart-function" aria-hidden="true">#</a></h3><p>当目标移动超过 <code>2px</code> 时就会触发，意味着拖动开始了。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><h3 id="ondragstartparams-array" tabindex="-1"><code>onDragStartParams: {Array}</code> <a class="header-anchor" href="#ondragstartparams-array" aria-hidden="true">#</a></h3><p>同 <code>onDragParams</code></p><h3 id="onlockaxis-function" tabindex="-1"><code>onLockAxis: {Function}</code> <a class="header-anchor" href="#onlockaxis-function" aria-hidden="true">#</a></h3><p>只要移动被锁定就会立马触发这个函数。前提是 <code>lockAxis: true</code>，并且被认定在拖动目标。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><h3 id="onmove-function" tabindex="-1"><code>onMove: {Function}</code> <a class="header-anchor" href="#onmove-function" aria-hidden="true">#</a></h3><p>每次鼠标在拖拽时移动就会触发这个函数。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>通常，最好使用 <code>onDrag</code> ，但是如果你需要拖拽事件中的 <code>.stopPropogation | .stopImmediatePropogation</code> 时，可以用这个函数</p></div><h3 id="onpress-function" tabindex="-1"><code>onPress: {Function}</code> <a class="header-anchor" href="#onpress-function" aria-hidden="true">#</a></h3><p>鼠标按压下去时就会触发这个函数。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><h3 id="onpressinit-function" tabindex="-1"><code>onPressInit: {Function}</code> <a class="header-anchor" href="#onpressinit-function" aria-hidden="true">#</a></h3><p>一个应该在onPress中记录起始值之前调用的函数，允许你在任何拖动发生之前进行更改。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>onPressInit</code> 总是在 <code>onPress</code> 之前触发。</p></div><p>🌰：</p><ul><li><a href="https://codepen.io/GreenSock/pen/gdPLqZ/62fd4014cf86a9a87e632c8b4f967ed4" target="_blank" rel="noreferrer">Draggable onPressInit Demo - @codepen</a></li></ul><h3 id="onpressparmas-array" tabindex="-1"><code>onPressParmas: {Array}</code> <a class="header-anchor" href="#onpressparmas-array" aria-hidden="true">#</a></h3><p>同 <code>onDragParams</code></p><h3 id="onrelease-function" tabindex="-1"><code>onRelease: {Function}</code> <a class="header-anchor" href="#onrelease-function" aria-hidden="true">#</a></h3><p>鼠标按压在目标元素上，释放时触发此函数，不论是否拖动。</p><p>函数内部 <code>this</code> 指向同其它回调函数（比如 <code>onClick</code>）</p><h3 id="onreleaseparams-array" tabindex="-1"><code>onReleaseParams: {Array}</code> <a class="header-anchor" href="#onreleaseparams-array" aria-hidden="true">#</a></h3><p>同 <code>onDragParams</code></p><h3 id="⭐-trigger-element-string-object" tabindex="-1"><code>⭐ trigger: {Element | String | Object}</code> <a class="header-anchor" href="#⭐-trigger-element-string-object" aria-hidden="true">#</a></h3><p>如果你只想某个特定区域（比如window的top bar位置）触发拖动而不是整个元素，你可以定义一个子元素作为trigger，比如:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yourElement</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#topBar</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">#</span><span style="color:#A6ACCD;">yourID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>可以是元素，选择器或者jQuery对象。</p><h3 id="⭐-type-string" tabindex="-1"><code>⭐ type: {String}</code> <a class="header-anchor" href="#⭐-type-string" aria-hidden="true">#</a></h3><p>表示拖动的类型（即拖动影响的属性值）。</p><p>下面几种情况都是可以的：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 即 translateX &amp; translateY</span></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">left,top</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">top</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rotation</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>默认是 <code>type: &#39;x,y&#39;</code></p><h3 id="zindexboost-boolean" tabindex="-1"><code>zIndexBoost: {Boolean}</code> <a class="header-anchor" href="#zindexboost-boolean" aria-hidden="true">#</a></h3><p>默认情况下，对于水平或者垂直方向拖动，当一个元素被按压时，它的 <code>zIndex</code> 会设置为一个比较高的值（默认 <code>1000</code>）。并且数值也会随着新的按压元素增加，这样堆叠顺序看起来是正确的(新按下的对象上升到顶部)，但是你可以通过 <code>zIndexBoost: false</code> 跳过这种行为。</p><h2 id="_3️⃣-snapping-用法" tabindex="-1">3️⃣ Snapping 用法 <a class="header-anchor" href="#_3️⃣-snapping-用法" aria-hidden="true">#</a></h2><p>这个词可以理解为 <code>吸附 或者 捕获</code>。</p><p>Draggable拥有高级的捕获能力。可以在 <code>config</code> 中定义 <code>snap</code> 值来控制元素拖拽<code>释放后</code>的位置，或者你可以定义 <code>liveSnap</code> 定义<code>拖动时</code> 实时捕获。可以通过下面方式定义：</p><h3 id="数组形式捕获" tabindex="-1">数组形式捕获 <a class="header-anchor" href="#数组形式捕获" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 吸附到数组中最近的点，但只能在 \`15px\` 范围内</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">points</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p><code>points</code> 是一个特殊的属性，允许你在单一地方结合 <code>x</code> 和 <code>y</code> 的逻辑。你也可以将它们分开：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// x &amp; y（或者 top &amp; left）可以都有自己的吸附数组</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">150</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="函数形式自定义逻辑" tabindex="-1">函数形式自定义逻辑 <a class="header-anchor" href="#函数形式自定义逻辑" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 吸附到数组中最近的点，但只能在 \`15px\` 范围内</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">points</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">point</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 如果在100px内，吸附到 500,250 位置</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">point</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">500</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">point</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">250</span></span>
<span class="line highlighted"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Matt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sqrt</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">dx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dy</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 100px半径内</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">250</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">point</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 否则不做任何改变</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>或者单独设置每个属性：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// x方向吸附增量为 50</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">50</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// y方向吸附增量为 25</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">25</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> 2</span><span style="color:#A6ACCD;">s5</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>🎉 <code>rotation</code> 也是一样的简单:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rotation</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">liveSnap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">rotation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 旋转吸附增量为 10</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">round</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="获取速度" tabindex="-1">获取速度 <a class="header-anchor" href="#获取速度" aria-hidden="true">#</a></h3><p>只要你加载了 <code>InertiaPlugin</code> （收费😅）并设置了 <code>inertia: true</code>，你就可以使用 <code>InertiaPlugin.getVelocity()</code> 方法。Draggable会自动基于 <code>type</code> 值（type: &#39;x,y&#39; 将追踪 <code>x &amp; y</code>; <code>type: &#39;rotation&#39;</code> 将追踪rotation）开始追踪必要的属性.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#movableID</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x,y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">inertia</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onDragEnd</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x velocity is: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">InertiaPlugin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getVelocity</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y velocity is: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">InertiaPlugin</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getVelocity</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">})</span></span>
<span class="line"></span></code></pre></div><h3 id="注意事项-依赖-限制" tabindex="-1">注意事项 &amp; 依赖 &amp; 限制 <a class="header-anchor" href="#注意事项-依赖-限制" aria-hidden="true">#</a></h3>`,156),t=s("ul",null,[s("li",null,[s("p",null,[n("大多数情况，应当使用 "),s("a",{href:"https://greensock.com/docs/v3/Plugins/DraggablePlugin/pointerX",target:"_blank",rel:"noreferrer"},".pointerX"),n(" & "),s("a",{href:"https://greensock.com/docs/v3/Plugins/DraggablePlugin/pointerY",target:"_blank",rel:"noreferrer"},".pointerY"),n("，而不是event的位置（比如 "),s("code",null,".pageX | .pageY"),n("），因为GSAP对position在所有浏览器进行了范式化")])]),s("li",null,[s("p",null,[n("如果你想特殊的元素可点击，并被 Draggable所忽略，只需给该元素添加 "),s("code",null,'data-clickable="true"'),n("，或者添加 "),s("code",null,"onclick"),n("。默认情况，Draggable会自动忽略 "),s("code",null,"<a> & <input> & <select> & <button> & <textarea>"),n(" 元素的点击。如果你想运行自定义逻辑来决定一个对象是否被认定为 "),s("code",null,"可点击"),n("，可以设置 "),s("code",null,"clickableTest"),n(" 配置属性，通过该函数返回 "),s("code",null,"true | false"),n(" 来判断。")])]),s("li",null,[s("p",null,[n("Draggable可以不依赖 "),s("code",null,"InertiaPlugin"),n("，但没有 "),s("code",null,"InertiaPlugin"),n(" 插件，会禁用任何基于动量的动效（比如可以轻弹物体，并让它们在减速的同时继续）。"),s("code",null,"InertiaPlugin"),n(" 是会员插件😅")])]),s("li",null,[s("p",null,[n("为了使物体基于 "),s("code",null,"top & left"),n(" CSS属性移动，你必须确保它们的 "),s("code",null,"position"),n(" 属性为 "),s("code",null,"relative | absolute"),n(" 📚")])]),s("li",null,[s("p",null,[n("默认情况下，任何回到函数 + "),s("code",null,"snap"),n(" + "),s("code",null,"liveSnap"),n(" 函数都和Draggable实例关联，因此 "),s("code",null,"this"),n(" 指向Draggable实例。你可以在函数内通过 "),s("code",null,"this.x & this.y"),n(" 获取当前水平和垂直方向的值。如果你使用了边界（"),s("code",null,"bounds"),n("），你可以使用 "),s("code",null,"this.maxX & this.minX & this.maxY & this.minY"),n(" 获取最大最小值")])]),s("li",null,[s("p",null,"如果使用元素作为边界，它的旋转不应与目标元素不同。")]),s("li",null,[s("p",null,"如果你混用timelines 和 draggable，你需要使用代理元素"),s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Draggable interfering with Timeline & visa versa",src:"https://codepen.io/GreenSock/embed/preview/WNedayo?default-tab=result&theme-id=dark",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/GreenSock/pen/WNedayo">
  Draggable interfering with Timeline &amp; visa versa</a> by GreenSock (<a href="https://codepen.io/GreenSock">@GreenSock</a>)
  on <a href="https://codepen.io">CodePen</a>.
`)]),s("li",null,[s("p",null,"不依赖jQuery和其他任何框架")])],-1),r=a('<h2 id="_4️⃣-draggable-示例" tabindex="-1">4️⃣ Draggable 示例 <a class="header-anchor" href="#_4️⃣-draggable-示例" aria-hidden="true">#</a></h2><ul><li><a href="https://codepen.io/collection/DrQGpM" target="_blank" rel="noreferrer">Draggable Showcases - codepen</a></li><li><a href="https://codepen.io/collection/XoGKyX?cursor=eyJjb2xsZWN0aW9uX2lkIjoiWG9HS3lYIiwiY29sbGVjdGlvbl90b2tlbiI6bnVsbCwibGltaXQiOjQsIm1heF9pdGVtcyI6MzMsIm9mZnNldCI6OCwicGFnZSI6Mywic29ydF9ieSI6InBvc2l0aW9uIiwic29ydF9vcmRlciI6IkFzYyJ9" target="_blank" rel="noreferrer">Draggable How-To Demos</a></li></ul><p>原文档地址：</p><ul><li><a href="https://greensock.com/docs/v3/Plugins/Draggable" target="_blank" rel="noreferrer">Draggable - plugin</a></li></ul><p>2022年11月02日20:59:48</p>',5),F=[c,t,r];function y(i,D,d,C,u,A){return e(),o("div",null,F)}const b=l(p,[["render",y]]);export{h as __pageData,b as default};
